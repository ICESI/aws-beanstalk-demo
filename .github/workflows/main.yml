name: pricehunters

env:
  EB_PACKAGE_S3_BUCKET_NAME: pricehunters-artifacts
  EB_APPLICATION_NAME: pricehunters
  EB_ENVIRONMENT_NAME: pricehunters-production-env 
  DEPLOY_PACKAGE_NAME: flask-app-${{ github.sha }}.zip
  AWS_REGION_NAME: us-east-1

on:
  push:
    branches:
    - master
  
jobs:
  build_pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Git clone repository
      uses: actions/checkout@v1
  
    - name: Generate ZIP deployment package
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
        
    - name: Copy package to S3 bucket
      run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

    - name: Print message on completion of build pipeline
      run: echo "Build pipeline finished succesfully"
    
  deploy_pipeline:
    runs-on: ubuntu-latest
    needs: [build_pipeline]
    
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
        
    - name: Create new Elastic Beanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}"
        --description "CommitSHA-${{ github.sha }}"
         
    - name: Deploy new Application Version
      run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}" 
         
    - name: Print message of completion on deploy pipeline
      run: echo "CD pipeline finished succesfully"
        
        
    
